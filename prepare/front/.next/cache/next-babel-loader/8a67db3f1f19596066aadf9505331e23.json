{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC11C\\uC9C4\\uC6C5\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react-nodebird-lecture-re\\\\prepare\\\\front\\\\components\\\\PostForm.js\";\nimport { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: v,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/서진웅/OneDrive/바탕 화면/react-nodebird-lecture-re/prepare/front/components/PostForm.js"],"names":["useCallback","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","addPost","useInput","PostForm","dispatch","imagePaths","addPostDone","state","post","text","onChangeText","setText","imageInput","onClickImageUpload","current","click","onSubmit","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import { useCallback, useRef, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst PostForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { imagePaths, addPostDone } = useSelector(state => state.post);\r\n    const [text, onChangeText, setText] = useInput('');\r\n    \r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            setText('');\r\n        }\r\n    }, [addPostDone])\r\n\r\n    const imageInput = useRef();\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text));\r\n    }, [text]);\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea \r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140} \r\n                placeholder='어떤 신기한 일이 있었나요?'\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type='primary' style={{ float: 'right' }} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={v} style={{ width: '200px' }} alt={v}/>\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}