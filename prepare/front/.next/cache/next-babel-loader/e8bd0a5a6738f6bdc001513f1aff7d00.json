{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggingIn: false,\n  // 로그인 시도중\n  isLoggedIn: false,\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'SIGN_UP_REQUEST';\nexport const FOLLOW_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const FOLLOW_FAILURE = 'SIGN_UP_FAILURE';\nexport const loginAction = data => {\n  return (dispatch, getState) => {\n    const state = getState();\n    dispatch(loginRequestAction());\n    axios.get('/api/login').then(res => {\n      dispatch(loginSuccessAction(res.data));\n    }).catch(err => {\n      dispatch(loginFailureAction(err));\n    });\n  };\n};\nexport const loginRequestAction = data => {\n  return {\n    type: \"LOG_IN_REQUEST\",\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: \"LOG_OUT_REQUEST\"\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOG_IN_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case \"LOG_IN_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: 'zerocho'\n        })\n      });\n\n    case \"LOG_IN_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n\n    case \"LOG_OUT_REQUEST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case \"LOG_OUT_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case \"LOG_OUT_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/서진웅/OneDrive/바탕 화면/react-nodebird-lecture-re/prepare/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","loginAction","data","dispatch","getState","state","loginRequestAction","axios","get","then","res","loginSuccessAction","catch","err","loginFailureAction","type","logoutRequestAction","reducer","action","nickname"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,WAAW,EAAE,KADW;AACJ;AACpBC,EAAAA,UAAU,EAAE,KAFY;AAGxBC,EAAAA,YAAY,EAAE,KAHU;AAGH;AACrBC,EAAAA,EAAE,EAAE,IAJoB;AAKxBC,EAAAA,UAAU,EAAE,EALY;AAMxBC,EAAAA,SAAS,EAAE;AANa,CAArB;AASP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,iBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,iBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,iBAAvB;AAEP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACAD,IAAAA,QAAQ,CAACG,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,YAAV,EACKC,IADL,CACWC,GAAD,IAAS;AACXP,MAAAA,QAAQ,CAACQ,kBAAkB,CAACD,GAAG,CAACR,IAAL,CAAnB,CAAR;AACH,KAHL,EAIKU,KAJL,CAIYC,GAAD,IAAS;AACZV,MAAAA,QAAQ,CAACW,kBAAkB,CAACD,GAAD,CAAnB,CAAR;AACH,KANL;AAOH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMP,kBAAkB,GAAIJ,IAAD,IAAU;AACxC,SAAO;AACHa,IAAAA,IAAI,EAAE,gBADH;AAEHb,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAMc,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAKP,MAAME,OAAO,GAAG,CAACZ,KAAK,GAAGvB,YAAT,EAAuBoC,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,gBAAL;AACI,6CACOV,KADP;AAEItB,QAAAA,WAAW,EAAE;AAFjB;;AAIJ,SAAK,gBAAL;AACI,6CACOsB,KADP;AAEItB,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAIIE,QAAAA,EAAE,kCAAOgC,MAAM,CAAChB,IAAd;AAAoBiB,UAAAA,QAAQ,EAAE;AAA9B;AAJN;;AAMJ,SAAK,gBAAL;AACI,6CACOd,KADP;AAEItB,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;;AAMJ,SAAK,iBAAL;AACI,6CACOqB,KADP;AAEIpB,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAK,iBAAL;AACI,6CACOoB,KADP;AAEIpB,QAAAA,YAAY,EAAE,KAFlB;AAGID,QAAAA,UAAU,EAAE,KAHhB;AAIIE,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAK,iBAAL;AACI,6CACOmB,KADP;AAEIpB,QAAAA,YAAY,EAAE;AAFlB;;AAIJ;AACI,aAAOoB,KAAP;AAtCR;AAwCH,CAzCD;;AA2CA,eAAeY,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggingIn: false, // 로그인 시도중\r\n    isLoggedIn: false,\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    me: null,\r\n    signUpData: {},\r\n    loginData: {}\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const loginAction = (data) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        dispatch(loginRequestAction());\r\n        axios.get('/api/login')\r\n            .then((res) => {\r\n                dispatch(loginSuccessAction(res.data));\r\n            })\r\n            .catch((err) => {\r\n                dispatch(loginFailureAction(err));\r\n            })\r\n    }\r\n}\r\n\r\nexport const loginRequestAction = (data) => {\r\n    return {\r\n        type: \"LOG_IN_REQUEST\",\r\n        data\r\n    }\r\n}\r\n\r\nexport const logoutRequestAction = () => {\r\n    return {\r\n        type: \"LOG_OUT_REQUEST\"\r\n    }\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOG_IN_REQUEST\": \r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n            }\r\n        case \"LOG_IN_SUCCESS\": \r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                me: { ...action.data, nickname: 'zerocho' }\r\n            }\r\n        case \"LOG_IN_FAILURE\": \r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false\r\n            }\r\n\r\n        case \"LOG_OUT_REQUEST\": \r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            }\r\n        case \"LOG_OUT_SUCCESS\": \r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                isLoggedIn: false,\r\n                me: null\r\n            }\r\n        case \"LOG_OUT_FAILURE\": \r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}