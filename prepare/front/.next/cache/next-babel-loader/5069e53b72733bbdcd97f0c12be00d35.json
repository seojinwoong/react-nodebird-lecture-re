{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC560\\uB4DC\\uD2B8\\uB77C\\uC774\\uBE0C\\\\Desktop\\\\react-nodebird-re\\\\prepare\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // 또는 ,,, 이렇게도 가능 => const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostsLoading = _useSelector2.loadPostsLoading; // 또는 ,,, 이렇게도 가능 => const mainPosts = useSelector(state => state.post.mainPosts);\n\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      // console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (post, index) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Home, \"i/nzWAUQQ+Depgog4i+rt8qcSuw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/애드트라이브/Desktop/react-nodebird-re/prepare/front/pages/index.js"],"names":["useEffect","AppLayout","useSelector","useDispatch","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","loadPostsLoading","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","index","id"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AACA,qBAAeD,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR,CAFe,CAGf;;;AACA,sBAAqDT,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAAhE;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,WAAnB,iBAAmBA,WAAnB;AAAA,MAAgCC,gBAAhC,iBAAgCA,gBAAhC,CAJe,CAKf;;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,YAAM;AACZ,aAASiB,QAAT,GAAoB;AAChB;AACA,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACtG,YAAIT,WAAJ,EAAiB;AACbN,UAAAA,QAAQ,CAAC;AACLQ,YAAAA,IAAI,EAAEV;AADD,WAAD,CAAR;AAGH;AACJ;AACJ;;AACDY,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,YAAM;AACTC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACH,KAFD;AAGH,GAfQ,EAeN,CAACH,WAAD,CAfM,CAAT;AAiBA,sBACI,QAAC,SAAD;AAAA,eACKH,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,aADX,EAEKE,SAAS,CAACa,GAAV,CAAc,UAACd,IAAD,EAAOe,KAAP;AAAA,0BAAiB,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEf;AAA9B,SAAeA,IAAI,CAACgB,EAApB;AAAA;AAAA;AAAA;AAAA,eAAjB;AAAA,KAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CApCD;;GAAMrB,I;UACeJ,W,EACFD,W,EAEsCA,W;;;KAJnDK,I;AAsCN,eAAeA,IAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector(state => state.user);\r\n    // 또는 ,,, 이렇게도 가능 => const isLoggedIn = useSelector(state => state.user.isLoggedIn);\r\n    const { mainPosts, hasMorePost, loadPostsLoading } = useSelector(state => state.post);\r\n    // 또는 ,,, 이렇게도 가능 => const mainPosts = useSelector(state => state.post.mainPosts);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            // console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n                if (hasMorePost) {\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        }\r\n    }, [hasMorePost]);\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post, index) => <PostCard key={post.id} post={post}/>)}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}