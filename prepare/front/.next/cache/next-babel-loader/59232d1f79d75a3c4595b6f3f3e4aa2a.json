{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnFollow),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { delay, put, all, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOutAPI() {\n  return axios.get('/api/logout');\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUpAPI() {\n  return axios.get('/api/signup');\n}\n\nfunction signUp() {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchUnFollow() {\n  return _regeneratorRuntime.wrap(function watchUnFollow$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/애드트라이브/Desktop/react-nodebird-re/prepare/front/sagas/user.js"],"names":["logIn","logOut","signUp","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga","delay","put","all","takeLatest","fork","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","logInAPI","data","post","action","type","error","response","logOutAPI","get","signUpAPI","FOLLOW_REQUEST","follow","UNFOLLOW_REQUEST","unfollow"],"mappings":"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","sourcesContent":["import { delay, put, all, takeLatest, fork } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { \r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI (data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result =  yield call(logInAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\nfunction logOutAPI () {\r\n    return axios.get('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield delay(1000);\r\n        // const result =  yield call(logOutAPI)\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI () {\r\n    return axios.get('/api/signup')\r\n}\r\n\r\nfunction* signUp() {\r\n    try {\r\n        yield delay(1000);\r\n        // const result =  yield call(signUpAPI)\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn); \r\n    // takeLatest => 만약 더블클릭했을때는 마지막것만 알아서 실행해줌.\r\n    // takeLeading =>  만약 더블클릭했을때는 첫번째것만 알아서 실행해줌.\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}