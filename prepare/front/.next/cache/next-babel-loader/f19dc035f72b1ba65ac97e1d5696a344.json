{"ast":null,"code":"import { delay, put, all, takeLatest, fork } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result =  yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.post('/api/follow');\n}\n\nfunction* follow() {\n  try {\n    // const result =  yield call(followAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow');\n}\n\nfunction* unfollow() {\n  try {\n    // const result =  yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.get('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield delay(1000); // const result =  yield call(logOutAPI)\n\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction signUpAPI() {\n  return axios.get('/api/signup');\n}\n\nfunction* signUp() {\n  try {\n    yield delay(1000); // const result =  yield call(signUpAPI)\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); // takeLatest => 만약 더블클릭했을때는 마지막것만 알아서 실행해줌.\n  // takeLeading =>  만약 더블클릭했을때는 첫번째것만 알아서 실행해줌.\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}","map":{"version":3,"sources":["C:/Users/애드트라이브/Desktop/react-nodebird-re/prepare/front/sagas/user.js"],"names":["delay","put","all","takeLatest","fork","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_SUCCESS","logInAPI","data","post","logIn","action","type","err","error","response","followAPI","follow","FOLLOW_FAILURE","unfollowAPI","unfollow","logOutAPI","get","logOut","signUpAPI","signUp","watchLogIn","watchLogOut","watchSignUp","watchFollow","FOLLOW_REQUEST","watchUnFollow","UNFOLLOW_REQUEST","userSaga"],"mappings":"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","sourcesContent":["import { delay, put, all, takeLatest, fork } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport { \r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, \r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_SUCCESS\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI (data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result =  yield call(logInAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\nfunction followAPI (data) {\r\n    return axios.post('/api/follow')\r\n}\r\n\r\nfunction* follow() {\r\n    try {\r\n        // const result =  yield call(followAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\nfunction unfollowAPI (data) {\r\n    return axios.post('/api/unfollow')\r\n}\r\n\r\nfunction* unfollow() {\r\n    try {\r\n        // const result =  yield call(logInAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\nfunction logOutAPI () {\r\n    return axios.get('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        yield delay(1000);\r\n        // const result =  yield call(logOutAPI)\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction signUpAPI () {\r\n    return axios.get('/api/signup')\r\n}\r\n\r\nfunction* signUp() {\r\n    try {\r\n        yield delay(1000);\r\n        // const result =  yield call(signUpAPI)\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn); \r\n    // takeLatest => 만약 더블클릭했을때는 마지막것만 알아서 실행해줌.\r\n    // takeLeading =>  만약 더블클릭했을때는 첫번째것만 알아서 실행해줌.\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}